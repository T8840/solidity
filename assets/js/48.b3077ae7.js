(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{464:function(n,e,a){"use strict";a.r(e);var t=a(2),s=Object(t.a)({},(function(){var n=this,e=n._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h1",{attrs:{id:"_22-合约编码规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_22-合约编码规范"}},[n._v("#")]),n._v(" 22.合约编码规范")]),n._v(" "),e("p",[n._v("良好统一的编程风格，有助于提高代码的可读性和可维护性。根据风格整理成规范，可以让团队之间更好的配合。")]),n._v(" "),e("p",[n._v("下面是我结合网络上别人分享的内容，以及参考 Vscode 代码格式化整理优化出的；抛砖引玉，仅供参考。")]),n._v(" "),e("ul",[e("li",[n._v("如果合约对状态变量进行了修改，需要抛出事件。")]),n._v(" "),e("li",[n._v("构造函数的参数必须是"),e("code",[n._v("storage")]),n._v("或"),e("code",[n._v("memory")]),n._v("，不能使用"),e("code",[n._v("calldata")]),n._v(";")]),n._v(" "),e("li",[n._v("版权注释在文件的任何位置都可以被编译器识别，但建议把它放在文件的顶部第一行。")])]),n._v(" "),e("h2",{attrs:{id:"_1️⃣-代码布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1️⃣-代码布局"}},[n._v("#")]),n._v(" 1️⃣ 代码布局")]),n._v(" "),e("ul",[e("li",[e("p",[n._v("源码编码")]),n._v(" "),e("ul",[e("li",[n._v("UTF-8")])])]),n._v(" "),e("li",[e("p",[n._v("缩进")]),n._v(" "),e("ul",[e("li",[n._v("使用 4 个空格代替制表符作为缩进，避免空格与制表符混用。")])])]),n._v(" "),e("li",[e("p",[n._v("2 个合约定义之间空 2 行。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("pragma solidity ^0.5.0;\n\ncontract LedgerBalance {\n    //...\n}\n\n\ncontract Updater {\n    //...\n}\n")])])])]),n._v(" "),e("li",[e("p",[n._v("2 个函数之间空 1 行,在只有声明的情况下，不需要空行。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("pragma solidity ^0.5.0;\n\ncontract A {\n    function balance() public pure;\n    function account() public pure;\n}\n\n\ncontract B is A {\n    function balance() public pure {\n        // ...\n    }\n\n    function account() public pure {\n        // ...\n    }\n}\n")])])])]),n._v(" "),e("li",[e("p",[n._v("单行不要太长，VScode 一行默认不超过 80 个字符。")])]),n._v(" "),e("li",[e("p",[n._v("函数声明如果太长，左括号不换行，每个参数一行并缩进，右括号换行，并对齐左括号所在行。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function_with_a_long_name(\n    longArgument1,\n    longArgument2,\n    longArgument3\n);\n\nvariable = function_with_a_long_name(\n    longArgument1,\n    longArgument2,\n    longArgument3\n);\n\nevent multipleArguments(\n    address sender,\n    address recipient,\n    uint256 publicKey,\n    uint256 amount,\n    bytes32[] options\n);\n\nMultipleArguments(\n    sender,\n    recipient,\n    publicKey,\n    amount,\n    options\n);\n")])])])]),n._v(" "),e("li",[e("p",[n._v("避免在圆括号、方括号或大括号后有空格。")])]),n._v(" "),e("li",[e("p",[n._v("控制结构的大括号左括号不换行，右括号换行，与左括号所在行对齐。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("pragma solidity ^0.5.0;\n\ncontract Coin {\n    struct Bank {\n        address owner;\n        uint balance;\n    }\n}\n\n\nif (x < 3) {\n    x += 1;\n} else if (x > 7) {\n    x -= 1;\n} else {\n    x = 5;\n}\nif (x < 3)\n    x += 1;\nelse\n    x -= 1;\n")])])])]),n._v(" "),e("li",[e("p",[n._v("函数声明，添加可见性标签。可见性标签应该放在自定义修饰符之前。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function kill() public onlyowner {\n    selfdestruct(owner);\n}\n")])])])]),n._v(" "),e("li",[e("p",[n._v("声明映射变量时避免多余空格。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("mapping(uint => uint) map; // 不是 mapping (uint => uint) map;\nmapping(address => bool) registeredAddresses;\nmapping(uint => mapping(bool => Data[])) public data;\nmapping(uint => mapping(uint => s)) data;\n")])])])]),n._v(" "),e("li",[e("p",[n._v("声明数组变量时避免多余空格。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("uint[] x;  // 不是 unit [] x;\n")])])])]),n._v(" "),e("li",[e("p",[n._v("字符串声明,使用双引号声明字符串，而不是单引号。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('str = "foo";\nstr = "Hamlet says, \'To be or not to be...\'";\n')])])])])]),n._v(" "),e("h2",{attrs:{id:"_2️⃣-代码中各部分的顺序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2️⃣-代码中各部分的顺序"}},[n._v("#")]),n._v(" 2️⃣ 代码中各部分的顺序")]),n._v(" "),e("p",[n._v("代码中各部分顺序如下：")]),n._v(" "),e("ol",[e("li",[n._v("License")]),n._v(" "),e("li",[n._v("Pragma")]),n._v(" "),e("li",[n._v("import")]),n._v(" "),e("li",[n._v("interface")]),n._v(" "),e("li",[n._v("library")]),n._v(" "),e("li",[n._v("contract")])]),n._v(" "),e("p",[n._v("在 Interface、库或 Contract 中，各部分顺序应为：")]),n._v(" "),e("ol",[e("li",[e("p",[n._v("Type declaration : 类型声明")])]),n._v(" "),e("li",[e("p",[n._v("State variable : 状态变量")])]),n._v(" "),e("li",[e("p",[n._v("Event : 事件")])]),n._v(" "),e("li",[e("p",[n._v("Modifier : 函数修改器")])]),n._v(" "),e("li",[e("p",[n._v("Errors : 自定义错误")])]),n._v(" "),e("li",[e("p",[n._v("Constructor : 构造函数")])]),n._v(" "),e("li",[e("p",[n._v("Function : 函数")]),n._v(" "),e("ol",[e("li",[n._v("函数按"),e("strong",[n._v("visibility:可见性")]),n._v("进行排序: "),e("code",[n._v("External - Public - Internal - Private")])]),n._v(" "),e("li",[n._v("同一可见性，按照 "),e("strong",[n._v("mutability:状态可变性")]),n._v(" 排序: "),e("code",[n._v("payable - 无 - view - pure")])])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// External functions\n// ...\n\n// External view functions\n// ...\n\n// External pure functions\n// ...\n\n// Public functions\n// ...\n\n// Internal functions\n// ...\n\n// Private functions\n// ...\n")])])])]),n._v(" "),e("li",[e("p",[n._v("Helper : 辅助函数")])])]),n._v(" "),e("h2",{attrs:{id:"_3️⃣-文件结构分享"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3️⃣-文件结构分享"}},[n._v("#")]),n._v(" 3️⃣ 文件结构分享")]),n._v(" "),e("p",[n._v("我的文件结构，分享给大家，仅供参考，抛砖引玉。代码块分割主要是让合约的逻辑更清晰，团队合作写代码的时候，都能按照统一的约定来进行编码。")]),n._v(" "),e("p",[n._v("不同功能的代码块使用下面任意一种做明显标记。")]),n._v(" "),e("p",[n._v("第一种：")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("/*\n  * ========================================\n  * State Variables\n  * ========================================\n  */\n")])])]),e("p",[n._v("第二种：(两边各 12 个 "),e("code",[n._v("=")]),n._v(")")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("/* ============ State Variables ============ */\n")])])]),e("p",[n._v("如果需要写详细的 NetSpec 注释，我比较喜欢使用第一种。如果是不需要这样做，比较喜欢第二种。第一种写法，在第一章"),e("RouterLink",{attrs:{to:"/source/01.hello.html#id40"}},[n._v("同志们好")]),n._v(" 那里已经演示过了，这里演示第二种写法。如下是写法的演示：")],1),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n// import\n\n// interface\n\n// library\n\ncontract Demo {\n    /* ============ Type Declaration ============ */\n    struct Book {\n        string title;\n        string author;\n        uint256 book_id;\n    }\n\n    /* ============ State Variables ============ */\n    address public immutable owner;\n    Book[] public bookcase;\n\n    /* ============ Events ============ */\n    event Hello(string);\n\n    /* ============ Modifier ============ */\n    modifier onlyOwner() {\n        require(msg.sender == owner, "Only owner");\n        _;\n    }\n\n    /* ============ Errors ============ */\n    error MyError(string);\n\n    /* ============ Constructor ============ */\n    constructor() {\n        owner = msg.sender;\n    }\n\n    /* ============ Functions ============ */\n\n    /* ============ External Functions ============ */\n    function hello() external onlyOwner {\n        emit Hello("Hello Comrades");\n    }\n\n    /* ============ Helper ============ */\n    function getBalance() external view returns (uint256) {\n        return address(this).balance;\n    }\n}\n')])])]),e("h2",{attrs:{id:"_4️⃣-命名约定"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4️⃣-命名约定"}},[n._v("#")]),n._v(" 4️⃣ 命名约定")]),n._v(" "),e("ul",[e("li",[e("p",[n._v("合约和库名: 大驼峰式命名。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ncontract Owned {\n    //...\n}\n")])])])]),n._v(" "),e("li",[e("p",[n._v("合约和库名: 匹配它们的文件名。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n// 文件名:Owned.sol\ncontract Owned {\n    //...\n}\n")])])])]),n._v(" "),e("li",[e("p",[n._v("如果文件中有多个合约/库，使用核心合约/库的名称。🤔️")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\n// 文件名:Owned.sol\ncontract Owned {\n    address public owner;\n\n    constructor() public {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        //....\n        _;\n    }\n\n    function transferOwnership(address newOwner) public onlyOwner returns(true){\n        //...\n        return true;\n    }\n}\n")])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport "./Owned.sol";\n\n// Congress.sol\ncontract Congress is Owned {\n//...\n}\n')])])])]),n._v(" "),e("li",[e("p",[n._v("结构体名称: 大驼峰式命名。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("struct BookInfo {\n    string title;\n    string author;\n    uint256 book_id;\n}\n")])])])]),n._v(" "),e("li",[e("p",[n._v("事件名称: 大驼峰式命名")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("event AfterTransfer(address ads);\n")])])])]),n._v(" "),e("li",[e("p",[n._v("函数名: 小驼峰命名")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function balanceOf(address account) external view returns (uint256){};\n")])])])]),n._v(" "),e("li",[e("p",[e("code",[n._v("internal")]),n._v("函数名:"),e("code",[n._v("_")]),n._v("+小驼峰命名")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function _grantRole(address _ads, bytes32 _role) internal {}\n")])])])]),n._v(" "),e("li",[e("p",[e("code",[n._v("internal")]),n._v("变量:"),e("code",[n._v("_")]),n._v("+小驼峰")])]),n._v(" "),e("li",[e("p",[n._v("函数参数:小驼峰+"),e("code",[n._v("_")])]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("constructor(string memory name_, string memory symbol_) {\n    _name = name_;\n    _symbol = symbol_;\n}\n")])])])]),n._v(" "),e("li",[e("p",[n._v("局部变量和状态变量:小驼峰命名")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("mapping(address => uint256) public balanceOf;\n")])])])]),n._v(" "),e("li",[e("p",[n._v("常量:大写字母单词用下划线分隔。")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("address public constant MIN_BLOCKS;\n")])])])]),n._v(" "),e("li",[e("p",[n._v("函数修改器: 小驼峰命名")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('modifier onlyOwner(){\n    require(msg.sender==owner,"must owner address");\n    _;\n}\n')])])])]),n._v(" "),e("li",[e("p",[n._v("枚举的名字:大驼峰式命名")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("enum Status {\n    None,\n    Pending,\n    Shiped,\n    Completed,\n    Rejected,\n    Canceled\n}\n")])])])])]),n._v(" "),e("h2",{attrs:{id:"_5️⃣-更多内容"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5️⃣-更多内容"}},[n._v("#")]),n._v(" 5️⃣ 更多内容")]),n._v(" "),e("p",[n._v("重要需要总结的内容:")]),n._v(" "),e("p",[n._v("https://docs.soliditylang.org/zh/latest/style-guide.html")])])}),[],!1,null,null,null);e.default=s.exports}}]);