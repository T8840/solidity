(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{441:function(t,n,e){"use strict";e.r(n);var a=e(2),s=Object(a.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"_08-循环与迭代"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_08-循环与迭代"}},[t._v("#")]),t._v(" 08.循环与迭代")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("for")])]),t._v(" "),n("li",[n("code",[t._v("while")])]),t._v(" "),n("li",[n("code",[t._v("do ... while")])])]),t._v(" "),n("p",[t._v("循环控制语句："),n("code",[t._v("continue")]),t._v("/"),n("code",[t._v("break")]),t._v("。")]),t._v(" "),n("h2",{attrs:{id:"_1️⃣-for-语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1️⃣-for-语句"}},[t._v("#")]),t._v(" 1️⃣ for 语句")]),t._v(" "),n("h3",{attrs:{id:"_1-语法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-语法"}},[t._v("#")]),t._v(" 1.语法")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("for (初始化; 测试条件; 迭代语句) {\n   // 如果表达式的结果为真，就循环执行以下语句\n   ......\n}\n")])])]),n("p",[n("strong",[t._v("例子")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ncontract For {\n    // 输入5    输出15\n    function test1(uint256 _x) external pure returns (uint256 temp) {\n        for (uint256 i = 1; i <= _x; i++) {\n            temp += i;\n        }\n    }\n}\n")])])]),n("h3",{attrs:{id:"_2-循环控制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-循环控制"}},[t._v("#")]),t._v(" 2.循环控制")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("continue")]),t._v(" 退出当前迭代\n"),n("ul",[n("li",[t._v("语句可以用来继续执行（跳过代码块的剩余部分并进入下一循环）。")])])]),t._v(" "),n("li",[n("code",[t._v("break")]),t._v(" 终止循环")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ncontract For {\n    // 输入5    输出15\n    function test1(uint256 _x) external pure returns (uint256 temp) {\n        for (uint256 i = 0; i <= _x; i++) {\n            temp += i;\n        }\n    }\n\n    // 输入5    输出7\n    function test2(uint256 _x) external pure returns (uint256 temp) {\n        for (uint256 i = 0; i <= _x; i++) {\n            if (i == 3) {\n                continue;\n            }\n            if (i == 5) {\n                break;\n            }\n            temp += i;\n        }\n    }\n}\n")])])]),n("h3",{attrs:{id:"_3-使用-i-可以省-gas"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用-i-可以省-gas"}},[t._v("#")]),t._v(" 3.使用 ++i 可以省 gas")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ncontract For {\n    function test1(uint256 _x) external pure returns (uint256 temp) {\n        for (uint256 i = 1; i <= _x; i++) {\n            temp += i;\n        }\n    }\n    function test2(uint256 _x) external pure returns (uint256 temp) {\n        for (uint256 i = 1; i <= _x; ++i) {\n            temp += i;\n        }\n    }\n}\n")])])]),n("ul",[n("li",[t._v("运行 test1"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 输入 5    : 23658 gas\n// 输入 100  : 58713 gas\n")])])])]),t._v(" "),n("li",[t._v("运行 test2"),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// 输入 5    : 23655 gas\n// 输入 100  : 58235 gas\n")])])])])]),t._v(" "),n("h2",{attrs:{id:"_2️⃣-while-语句"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2️⃣-while-语句"}},[t._v("#")]),t._v(" 2️⃣ while 语句")]),t._v(" "),n("h3",{attrs:{id:"_1-语法-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-语法-2"}},[t._v("#")]),t._v(" 1.语法")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("while (表达式) {\n   // 如果表达式的结果为真，就循环执行以下语句\n   ......\n}\n")])])]),n("p",[n("strong",[t._v("例子")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ncontract For {\n    function test1(uint256 _x) external pure returns (uint256 temp) {\n        uint256 i = 0;\n        while (i <= _x) {\n            temp += i;\n            i++;\n        }\n    }\n}\n")])])]),n("h2",{attrs:{id:"_3️⃣-do-while"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3️⃣-do-while"}},[t._v("#")]),t._v(" 3️⃣ do...while")]),t._v(" "),n("h3",{attrs:{id:"_1-语法-3"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-语法-3"}},[t._v("#")]),t._v(" 1.语法")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("do {\n   // 如果表达式的结果为真，就循环执行以下语句\n   ......\n} while (表达式);\n")])])]),n("p",[n("strong",[t._v("例子")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\ncontract For {\n    function test1(uint256 _x) external pure returns (uint256 temp) {\n        uint256 i = 0;\n        while (i <= _x) {\n            temp += i;\n            i++;\n        }\n    }\n\n    function test2(uint256 _x) external pure returns (uint256 temp) {\n        uint256 i = 0;\n        do {\n            temp += i;\n            i++;\n        } while (i <= _x);\n    }\n}\n")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);